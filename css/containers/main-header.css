/* cabeçalho principal */

/* nome com duas palavras, mas não o colocamos no diretório de components posi ele é diferente: Ele não é reutilizavel (Da mesma maneira que a sacola é!) Existem dois níveis de reutilização. Podemos pegar a sacola e colocá-la em vários lugares diferentes da página (utilizando-a em vários contextos). Já o cabeçalho, assim como o Rodapé, nunca vão deixar de ser cabeçalho e rodapé, ou seja, seu lugares, posicionamentos nas páginas e semântica nuca mudam = Já tem uma função a cumprir. (Ele é mais limitado. Nós podemos utilizá-los em várias páginas, várias vezes, mas ele sempre terão a mesma finalidade. ELE SEMPRE SERÁ O HEADER - terá características bem específicas.)

Com isso, criamos o diretório "containers" que geralmente envolvem outros elementos. */

header {
    background-image: url(../../img/fundo-cabecalho.jpg);
}

.main-header {
    padding: 10px 0 20px 0;
    text-align: center;
}

/* Se usarmos a sacolinha em outro lugar, ela pode ficar aparecendo o tempo todo na tela, só faz sentido ela sumir porque ela está no header e ela fica apertada no conteúdo do header. Então sempre temos que pensar no porque do elemento estar mudando o seu estado. Ele esta sendo mudado por caus do contexto que ele está sendo usado ou porque ele sempre vai ter esse comportamento? nesse caso, ele não vai ter sempre esse comportamento. (Se usamor ele em outro lugar na página, ou no rodapé, ou em outro lugar que naõ seja no header ele vai ter outro comportamento) e é imprevisível isso porque nós não temos isso no layout ainda. Mas nesse contexto, faz mais sentido escodermos a sacolinha dentro do header, porque isso está relacionado ao header */

.main-header .logo {
    width: 150px;
    margin: 0 0 10px 5px;
}

.main-header .shopping-bag {
    display: none;
}

.main-header .action {
    display: inline-block;
    margin: 2px 8px 8px;
}

/* Sempre possível, é melhor usar o seletor de filho direto e os demais para ficar mais fácil de ler o se css */

/* http - lógica de programação - estrutura de dados - base de algotimo e resolução de problemas - git e github 

soft skill - ler documentação (respeitar a documentação) - valorizar troca de informação - inglês 
 livro Loyane estrutra de dados. */

@media (min-width: 800px) {

    .main-header {
        display: flex; /* Por padrão vai deixar um do lado do outro */
        justify-content: space-between; /* para deixar o espaço "certo" entre o elementos - Joga um elemento para a direita e o outro pra esquerda - deixando um espaço entre eles. */
        position: relative;
    }

    .main-header .shopping-bag { 
        display: block;
        position: absolute;
        top: 0px;
        right: 10px;
    }

    .main-header .menu {
        align-self: flex-end; /* Como por padãro, o menu irá se mover no eixo x, com o flex-end fazemos ele se mover para o eixo y */
        margin-top: 50px;
    }
}
