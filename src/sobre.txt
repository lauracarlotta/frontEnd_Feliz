depois ensina a confiruar o eslint
 loading na tag img?
 resetar css









logo mirror fashon (imagem)=> E-commerce
        => É uma loja focada em roupas femininas para o público de classe média alta. (Também tem roupas para o público masculino, porém o foco é do feminino = importante para o UX)

Título A Mirror Fashion

Paragráfo a Mirror Fashion é a maior empresa ...

Paragráfo nosso centro de distribuição ...

Foto do centro de distribuição / legenda

Paragráfo Compre suas roupas e acessórios...

Subtítulo = História

        => A hierarquia de título, a tipografia (tamanho da fonte, subtítulo, título, etc) é uma herança que vem do jornal, do Impresso.

E PARA PODERMOS NOS COMUNICAR COM O NAVEGADOR E PASSAR TODAS ESSAS INFORMÇÕES PARA O BROWSER, NÓS USAMOS AS "tags". AS TAGS SERVEM PARA DAR SÊMANTICA DENTRO DO HTML (TRANSMITIR A INFO CORRETA PARA O CONTEÚDO CORRETO). SERVE PARA VALORIZAR O CONTEÚDO PARA DAR ACESSIBILIDADE AO CONTEÚDO E SERVE TAMBÉM PARA O SEO* [Search Engine Optimization (otimização para mecanismos de busca)]. (DAR UMA BOA REFERENCIA PARA BUSCA NO GOOGLE - OTIMIZAR O SITE PARA A BUSCA) => pessoas/SEO

Usando as tags:

    <nomeDaTag> = Tag de abertura
    </nomeDaTag> = Tag de fechamento
    <img/> = Quando não tem tag de fechamento? Quando ela não tem começo meio e fim. 
    com o arquivo em .html, as tags ficam em outra cor, o que chamamos de starlight.

        <h1>A Mirror Fashion</h1>

        <p>a Mirror Fashion é a maior empresa ... </p> .p-paragrafe

        <p> nosso centro de distribuição ... </p>

        Foto do centro de distribuição / legenda

        <p> Compre suas roupas e acessórios... </p>

        <h2> História </h2>

                
                
                *** Hierarquia de Títulos ***

                <h1> <h2> <h3> <h4> <h5> <h6> .h-heading 1 => foi criado o html para criar teses cientificas dentro da Web. * Não use até o h6 - Varie do h1 até no máximo h3. Você pode acabar atrapalhando a semântica do pág.


===>>> Tudo o que for conteúdo, colocamos denro da tag <body>
===>>> Porém, precisamos dar um nome para a página para que ele fique visível ao usuário, para que ele saiba em qual página está navegando. Colocamos assim a tag <title>

                >>> (A baixo veremos a construção do nosso site) <<<

===>>> Alguns navegadores não conseguem entender as acentuções (ã, ç, à, ü, ô, etc). Então, a partir de uma tabela que já existe, nos add as configs dela na nossa página para que o texto fique correto. Colocamos a tag <meta charset="UTF-8"/> .meta-metadados / #charset = char: caracteres e set: definir (característica ou config) / "UTF-8"-valor (definimos qual é a tabela de caracteres) 
*** TAG> ATRIBUTO> VALOR *** (Não tem tag de fechamento porque não tem conteúdo.)

===>>> tag que add imagens: <img src="../img/logo.png"/" alt="Logo da marca Mirror Fashion"/> .img-imagem / #src-source (caminho)/ "entre aspas, o local onde está a imagem, o endereço dela." (../ volta uma pasta) / Para deixar a imagem acessível para deficientes visuais momentâneo, parcial ou total, colocamos o atributo "alt" e nele fazemos uma descrição da imagem.

===>>> Colocamos a tag figcaption para colocar a legenda da imagem (muitas pessoas colocam a tag <p> de forma genérica mas para o html5 foi criada essa rag própria para as legendas)

??? E se nós tivessemos mais de uma imagem? Como eu sei que aquela legenda é daquela figura em específico?

envolvemos as tags <img> e <figcaption> na tag <figure> assim eu identifico (semânticamente) que aquela legenda representa sobre aquela exata imagem.

===>>> Quando colocamos a tag <!DOCTYPE html> estamos informando ao navegador que o tipo do nosso arquivo é um arquivo do tipo html na sua ultima versão de uso. (E por isso que ela tem que ficar na primiera linha pois é assim que o navegador entenderá de cara qual é a versão que estamos usando.)

===>>> A ordem do HTML é a seguinte:

        html1 ; html2; html3; html4; xhtml; html5.

===>>> Na tag <html> colocamos o atributo lang (linguagem) que assim, nessa tag global, indicamos em que idioma o site está sendo escrito. (com o valor "pt-BR", pois está em português.)

===>>> colocamos uma tag <link> para usarmos o css fora do html e ficaria assim: <link rel="stylesheet" href="../css/style.css"> rel - relation (relacionado ao que: ao valor "stylesheet" que é o estilo do css) e href - é o local do endereço de onde se encontra o arquivo css que eu estou criando

===>>> Listas:

        ordered list: lista ordenada <ol>
                (existe hierarquia de impostancia)
                <li> list item - item da lista
        unordered list: lista não-ordenada <ul>
                (não existe hierarquia de impostancia)
                <li> list item - item da lista

(===>>> Tag div não tem semantica)

===>>> Lorem cria um conteúdo gigante, caso você precise de um texto de exemplo

===>>> para colocar link, adicionamos a tag <a href=""> a - ancora e href - referencia (sem o href não funcionará)


        <!DOCTYPE html>
        <html lang="pt-BR">

                <head>
                        <meta charset="UTF-8"/>
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <title> A Mirror Fashion</title>
                        <link rel="stylesheet" href="../css/style.css">
                </head>

                <body>
                        <img src="../img/logo.png"/" alt="Logo da marca Mirror Fashion"/>

                        <h1>A Mirror Fashion</h1>

                        <p>a Mirror Fashion é a maior empresa ... </p>

                        <p> nosso centro de distribuição ... </p>

                        <figure>
                                <img src="../img/centro-distribuicao.png" alt="Foto do centro de distribuição da Mirror Fashion"/>
                                <figcaption>Centro de distribuição da Mirror Fashion</figcaption>
                        </figure>

                        <p> Compre suas roupas e acessórios... </p>

                        <h2> História </h2>

                        <figure>
                                <img src="../img/familia-pelho.jpg" alt="Fot da Família pelho">
                                <figcaption>Família Pelho</figcaption>
                        </figure>

                        <p>
                                A fundação em 1932 ocorreu no momento da descoberta econônica do interior do Paraná. A...
                        </p>

                        <p>
                                O crescimento da empresa foi praticamente instantâneo. Nos primeiros 5 anos, já atendia 18 países...
                        </p>

                        <p>
                                O crescimento em número de funcionários é também assombroso. Hoje, é a maior empregadora do 
                                Brasil, ...
                        </p>

                        <p>
                                Dada a importância econômica da empresa para o Brasil, a família Pelho já recebeu diversos prêmios, 
                                homenagens e ...
                        </p>

                        <h2>Diferenciais</h2>

                        <ul>
                                <li>Menor preço do varejo, garantido</li>
                                <li>Se você achar uma loja mais barata, leva o produto de graça</li>
                                <li>Pague em reais, dólares, euros ou bitcoins</li>
                                <li>Todas as compras com frete grátis para o mundo todo</li>
                                <li>Maior comércio eletrônico de moda do mundo</li>
                                <li>Atendimento via telefone, email, chat, twitter, facebook, carta, fax e telegrama</li>
                                <li>Presente em 124 países</li>
                                <li>Mais de um milhão de funcionários em todo o mundo</li>
                        </ul>

                        <footer>
                        <img src="../img/logo-rodape.png" alt="Logo da Mirror Fashion"/> 
                        &copy; Copyright Mirror Fashion
                        </footer>
                </body>
        </html>



                        *** CSS ***

                        (seletor > propriedade > valor)

        Agora, vamos estilizar a página:

        A tag <style> conseguimos dar propriedades a ela, assim visualmente, podemos modificar a cor de fundo da página, cor da letra, estilo da letra, se o texto ficará centralizado ou não, etc.

        É uma boa prática de programação quando separamos os arquivos, pois para a manutenção por exemplo, separamos os arquivos e assim facará muito mais fácil de saber onde eu devo alterar ou fazer a manutenção x, do que colocar nas tags html. (É como se deixassemos quando um cumprir com o seu papel. Caso colocassemos o css no html é como se "sobrecarregassemos" o html desnecessáriemante.) deixamos cada qual fazer o seu trabalho: html cuidando do conteúdo e o css cuidando da estilização. 

        ===>>> Para colocarmos uma linha abaixo do h2 nós usamos o border-bottom, porque a tag hr é semântica e é utilizada para separar estrofes e aqui queremos fazer algo visual, queremos colocar uma linha no background do h2

        ===>>> Como funciona o "box model"? (modelo de caixa)

                (de dentropra fora)

                Da tag <h2>
                > conteúdo (História)
                > padding (aumenta o tamanho da imagem)
                > **border (aumenta o tamanho da imagem)**
                > margin (aumenta o tamanho da imagem)

                HTML
                <h2>História</h2>

                CSS

                h2{
                        height:200px;
                        width:400px;
                        border: 1px solid white;
                        padding: 50px; (respiro interno)
                        margin: 60px; (respiro externo) => não acrescenta tamanho ao elemento.
                }

                                          width 400px
                        -------------------------------------------------
                        |                 margin 60px                   |
                        |solid **_______________________________** 1px  |
                        |       |         padding 50px          |       |
                        |       |       -----------------       |       |
                 height |       |       |   conteúdo    |       |       |
                  200px |       |       -----------------       |       |
                        |       |_______________________________|       |
                        |                                               |
                        -------------------------------------------------
                                          

                                tamanho total do item: 902px x 502px
                                

(Somamos: width or height + padding + border. A margin empurra o elementos que estão a volta mas não acrescenta tamanho ao elemnto)



* Podemos usar o body para deixar a página padronizada, por exemplo, cor de fundo, estilo de letra, etc... 

** sobre cores:

        1.Por nome: Red,
        2.Por hexadecimal: #ffffff => Baseado em luz,
        3.Por rgb (ou rgba):rgb(48, 47, 47) / rgba(48, 47, 47, 0.1); => 

                2. (RRGGBB) = Red, Green, Blue 0 - F.
                3. (rgb - red, green, blue 0 - 255)
                (rgba - red, green, blue, alpha => r, g, b = 0 - 255 e alpha 0 - 1) ALPHA dá uma transparencia a cor.

                [Já para colocar transparencia na imagem, add no css uma propriedade a tag <img> que a opacity: 0.5 (exemplo) Que é exatamente igual ao canal alpha do rgba] Exemplo:

                        HTML:
                        <img src="logo.png">

                        CSS:
                        img{
                                opacity: 0.5;
                                boder: 1px solid blue;
                        }

                        A opacidade será aplicada a toda a tag img e na borda também pois ficará na tag toda.


===>>> Temos que lembrar que tudo tem um padrão, no início. Exemplo: o texto todo sempre começará da esquerda apra a direita e de cima para baixo. Então, tudo, eu disse TUDO, sempre tem um coportamento padão para que possamos formata-los conforme nossa necessidade.

        -background-color: cor do fundo;

        -background-image: url() coloca uma imagem no fundo e seu valor será sua url (seu end.);

        -color: cor da letra;

        -border: 1px solid #000000 [tamanho, tipo e cor = em px, boda solid (sólida - contínua) e a cor preta (borda de qualquer elemento);
        
        - E ainda é possível dizer onde queremos essa linha: se left, right, top or bottom. Caso não seja especificado, quer dizer que a borda será em tudo];

        -text-align: center - alinhamento do texto (center - centralizado)* No nosso primiero caso aplicamos a tag <figure>, porém dentro dela temos além de um texto na <figcaption>, uma <img> e neste caso podemos considerar a img como texto também (como contéudo) e com isso, (a proprieadade sendo aplicada na tag pai), tudo o que estiver dentro (as tags filho) serão alteradas;

        -font-family: "Lucida Sans Unicode","LucidaGrande", Arial, sans-serif; (familia da fonte - Aqui, colocamos outras opções caso não haja aquela determinada fonte instalada na máquina do usuário) e por fim colocamos a sans-serif que ficaria como "qualquer fonte sem serifa";

        -font-style: italic - estilo da fonte (itálico);

        -text-indent: (só afeta o texto, como o seu prefixo mostra) adicionamos o parágrafo daquele que dáriamos com o tab quando estamos escrevendo no word ou no papel, quando a professora nos ensina no primário que um bom espaço para o parágrafo é colocar um dedo no início da folha da esquerda pra direita, marca um pontinho e começa a escrever daquele ponto. A doferença com o text-indent é que esse espaço, o colocamos em px, cm, ou em qualquer unidade de medida que vocẽ esteja usando para desenvolver a sua página;

        -width: largura [Quando você não define uma largura, ele (o elemento) ocupará toda a largura da página (o height ou ultilizará a altura do elemento ou se adaptará conforme o width)***];

                *** Lembrando que: nem toda a tag tem esse mesmo comportamento. isso (ocupar toda a largura da página) acontece para as tags <div>, <p>, etc. Já, por exemplo com a tag <a> (link) isso não acontecerá (irá ocupar só o espaço do link);

                *** Quando a largura vaza, causa um scroll (pode acontecer apra qualquer propriedade quando o valor que atribuimos ultrapassa ao tamanho da página atual.)

        -height: altura [quando você não a declara ela se ajustará com o width e caso você não coloque o width se adaptará ao tamanho da sua tela, caso você tenha declarado a tag <meta name="viewport" content="width=device-width, initial-scale=1.0">];

        -margin: respiro externo [auto: centralizará o elemento, pois ele atribui o mesmo valor de lado esquerdo para o lado direito (margin-left e margin-right). (Fica melhor de visualizar quando você define um valor para o width. Caso contrário, o margin se adaptará ao tamanho da sua tela.) Contudo, o margin auto funciona com 3 regras: display, width e margin. Assim ele funcionará direitinho (no nosso exemplo, usamos a div. Por padrão a div já é em display: block)]

                > margin: 10px [aplica em todas as direções];
                > margin-top: 10px [aplica só no topo] (ainda podemos definir especificamente para right, bottom e left.)
                > margin: 10px 11px 12px 13px [estamo fazendo a forma resumida e a ordem é 10px - top, 11px - right, 12px - bottom e 13px - left.]
                > margin: 10px 15px [será a plicado assim: 10px top e bottom / 15px right e left]
                        (então, margin: 0 auto [ficaria 0 para top e bottom / auto para right e left])
                > margin: 10px 12px 14px [10px para top, 12px para right e left, 14px para bottom]

                                         10px
                                      -----------
                                      |         |
                                 12px |         | 12px
                                      |         |
                                      -----------  
                                          14px

                        (Essa lógica acima, quando eu coloco só um valor, ou 2 ou 4 ou 3, se aplica para padding e border também [só temos que lembrar que pra toda regra, temos excessões] mas por padrão, funciona assim.)

        -padding: respiro interno [idem margin** (Quase sempre)];

        -display: block (bloco. Utilizará o bloco da página toda** Isso poderá ter algumas diferenças.)




body{
    width: 940px;
    color: #333333;
    font-family: "Lucida Sans Unicode","LucidaGrande", Arial, sans-serif;
    margin: 0 auto;
}

h1{
    background-image:url(../img/sobre-background.jpg);
    color: #000000;
    padding: 10px;
}

h2{
    border-bottom: 1px solid #333333;
    margin-top: 30px;
}

p{
    padding: 0 45px;
    text-indent: 15px;
}

figure{
    background-color:#f2eded;
    text-align: center;
    border: 1px solid #cecece;
    padding: 15px;
    margin: 30px;
}

figcaption{
    font-style: italic;
    margin-top: 10px;
}


        Na explicação de margin-auto:
        -----------------------------

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Explicação Margin-Auto</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div>
        First => Aprendendo o Margin-Auto
    </div>

    <p>
        Aprendendo o text-indent </br></br>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem ad dolor nostrum pariatur quos error veniam quibusdam illo, iusto repellendus, temporibus nisi sunt ullam, id maxime corrupti doloribus sed laboriosam!
    </p>
</body>
</html>

=======

body{
    color: #fff;
    background-color: #000;
}

div{
    font-size: 30px;
    background-color: rgb(138, 22, 22);
    display: block;
    width: 500px;
    margin: auto; /* ou margin: 0 auto; */
    text-align: center;
}

p{
    font-size: 20px;
    text-indent: 20px;
}




        Na explicação de link:
        ----------------------


-------------------------------------------

README.md

        # HTML

        - Tem a responsabilidade de guardar:
        - Conteúdo(textos e imagens);
        - Forma semântica (tags)
        - Estrutura (figure)
        (*ajudam na semântica mas não tem interferencia visual)

                = CONTEÚDO.

        # CSS

        - Tem responsabilidade de: 
        (Liguagem de estilo)
        - Visual

                = ESTILO.

        # JavaScript

        - Tem responsabilidade de:
        (Interatividade)
        - Interação, animação

                = INTERAÇÃO.
